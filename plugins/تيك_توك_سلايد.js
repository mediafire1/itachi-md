import fetch from 'node-fetch';

let handler = async (m, {
  conn,
  text,
  usedPrefix,
  command
}) => {
  if (command == 'ØªÙŠÙƒ_ØªÙˆÙƒ_Ø³Ù„Ø§ÙŠØ¯' || command == 'ttslide') {
    if (!text) throw `Ø£Ø¯Ø®Ù„ Ø±Ø§Ø¨Ø·Ù‹Ø§!\n\nÙ…Ø«Ø§Ù„: ${usedPrefix + command} https://vt.tiktok.com/ZSY8Me4jL/`;
    try {
      const api = await fetch(`https://api.botcahx.eu.org/api/download/tiktokslide?url=${text}&apikey=${btc}`);
      const res = await api.json();
      for (let i of res.result.images) {
        await sleep(3000);
        conn.sendMessage(m.sender, { image: { url: i }, caption: `*Ø§Ù„Ø¹Ù†ÙˆØ§Ù†*: ${res.result.title}` }, { quoted: m });         
      }
        conn.sendMessage(m.sender, { audio: { url: res.result.audio[0] }, mimetype: 'audio/mpeg' }, { quoted: m });
    } catch (e) {
      console.log(e);
      throw `ðŸš© *Ø­Ø¯Ø« Ø®Ø·Ø£!*`;
    }
  }
  if (command == 'Ø¯ÙˆÙŠÙŠÙ†_Ø³Ù„Ø§ÙŠØ¯' || command == 'Ø¯ÙˆÙŠÙŠÙ†_ØµÙˆØ±') { 
    if (!text) throw `Ø£Ø¯Ø®Ù„ Ø±Ø§Ø¨Ø·Ù‹Ø§!\n\nÙ…Ø«Ø§Ù„: ${usedPrefix + command} https://v.douyin.com/i2bPkLLo/`;
    try {
      const api = await fetch(`https://api.botcahx.eu.org/api/download/douyinslide?url=${text}&apikey=${btc}`);
      const res = await api.json();
      for (let i of res.result.images) {
        await sleep(3000);
        conn.sendMessage(m.sender, { image: { url: i }, caption: `*Ø§Ù„Ø¹Ù†ÙˆØ§Ù†*: ${res.result.title}` }, { quoted: m });         
      }
        conn.sendMessage(m.sender, { audio: { url: res.result.audio[0] }, mimetype: 'audio/mpeg' }, { quoted: m });
    } catch (e) {
      console.log(e);
      throw `ðŸš© *Ø­Ø¯Ø« Ø®Ø·Ø£!*`;
    }
  }
};

handler.command = handler.help = ['Ø¯ÙˆÙŠÙŠÙ†_Ø³Ù„Ø§ÙŠØ¯', 'Ø¯ÙˆÙŠÙŠÙ†_ØµÙˆØ±', 'ØªÙŠÙƒ_ØªÙˆÙƒ_Ø³Ù„Ø§ÙŠØ¯', 'ttslide'];
handler.tags = ['ØªØ­Ù…ÙŠÙ„'];
handler.limit = true;

export default handler;

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
                                             }
